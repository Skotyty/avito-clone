{"ast":null,"code":"var _jsxFileName = \"/home/skot/projects/avito/client/src/pages/ItemPage.js\",\n  _s = $RefreshSig$();\n/* import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { ItemContainer, ItemCard, ItemTitle, EditButton } from \"../styles/itemStyles\";\nimport { Typography } from \"@mui/material\";\n\nfunction ItemPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    fetch(`/items/${id}`)\n      .then((res) => res.json())\n      .then((data) => setItem(data));\n  }, [id]);\n\n  const handleEdit = () => {\n    navigate(`/form?edit=${id}`);\n  };\n\n  if (!item) return <Typography align=\"center\">–ó–∞–≥—Ä—É–∑–∫–∞...</Typography>;\n\n  return (\n    <ItemContainer>\n      <ItemCard>\n        <ItemTitle>{item.name}</ItemTitle>\n        <Typography>{item.description}</Typography>\n        <Typography color=\"text.secondary\">–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {item.type}</Typography>\n\n        <EditButton variant=\"contained\" onClick={handleEdit}>\n          –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n        </EditButton>\n      </ItemCard>\n    </ItemContainer>\n  );\n}\n\nexport default ItemPage;\n */\n////////////////////////////////////////////////\n/* import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { ItemContainer, ItemCard, ItemTitle, EditButton } from \"../styles/itemStyles\";\nimport { Typography, TextField, Button, Select, MenuItem } from \"@mui/material\";\n\nfunction ItemPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [item, setItem] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({});\n\n  useEffect(() => {\n    fetch(`/items/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setItem(data);\n        setFormData(data);\n      });\n  }, [id]);\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n    setFormData(item); // –û—Ç–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSave = () => {\n    fetch(`/items/${id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => res.json())\n      .then((updatedItem) => {\n        setItem(updatedItem);\n        setIsEditing(false);\n      });\n  };\n\n  if (!item) return <Typography align=\"center\">–ó–∞–≥—Ä—É–∑–∫–∞...</Typography>;\n\n  return (\n    <ItemContainer>\n      <ItemCard>\n        {isEditing ? (\n          <>\n            <TextField fullWidth label=\"–ù–∞–∑–≤–∞–Ω–∏–µ\" name=\"name\" value={formData.name} onChange={handleChange} required />\n            <TextField\n              fullWidth\n              label=\"–û–ø–∏—Å–∞–Ω–∏–µ\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleChange}\n              multiline\n              rows={3}\n              required\n            />\n            <TextField fullWidth label=\"–õ–æ–∫–∞—Ü–∏—è\" name=\"location\" value={formData.location} onChange={handleChange} required />\n\n            <Select fullWidth name=\"type\" value={formData.type} onChange={handleChange} required>\n              <MenuItem value=\"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\">–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å</MenuItem>\n              <MenuItem value=\"–ê–≤—Ç–æ\">–ê–≤—Ç–æ</MenuItem>\n              <MenuItem value=\"–£—Å–ª—É–≥–∏\">–£—Å–ª—É–≥–∏</MenuItem>\n            </Select>\n\n            {formData.type === \"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\" && (\n              <>\n                <TextField fullWidth label=\"–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏\" name=\"propertyType\" value={formData.propertyType} onChange={handleChange} />\n                <TextField fullWidth label=\"–ü–ª–æ—â–∞–¥—å (–º¬≤)\" name=\"area\" type=\"number\" value={formData.area} onChange={handleChange} />\n                <TextField fullWidth label=\"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç\" name=\"rooms\" type=\"number\" value={formData.rooms} onChange={handleChange} />\n                <TextField fullWidth label=\"–¶–µ–Ω–∞ (‚ÇΩ)\" name=\"price\" type=\"number\" value={formData.price} onChange={handleChange} />\n              </>\n            )}\n\n            {formData.type === \"–ê–≤—Ç–æ\" && (\n              <>\n                <TextField fullWidth label=\"–ú–∞—Ä–∫–∞\" name=\"brand\" value={formData.brand} onChange={handleChange} />\n                <TextField fullWidth label=\"–ú–æ–¥–µ–ª—å\" name=\"model\" value={formData.model} onChange={handleChange} />\n                <TextField fullWidth label=\"–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞\" name=\"year\" type=\"number\" value={formData.year} onChange={handleChange} />\n                <TextField fullWidth label=\"–ü—Ä–æ–±–µ–≥ (–∫–º)\" name=\"mileage\" type=\"number\" value={formData.mileage} onChange={handleChange} />\n              </>\n            )}\n\n            {formData.type === \"–£—Å–ª—É–≥–∏\" && (\n              <>\n                <TextField fullWidth label=\"–¢–∏–ø —É—Å–ª—É–≥–∏\" name=\"serviceType\" value={formData.serviceType} onChange={handleChange} />\n                <TextField fullWidth label=\"–û–ø—ã—Ç (–ª–µ—Ç)\" name=\"experience\" type=\"number\" value={formData.experience} onChange={handleChange} />\n                <TextField fullWidth label=\"–°—Ç–æ–∏–º–æ—Å—Ç—å (‚ÇΩ)\" name=\"cost\" type=\"number\" value={formData.cost} onChange={handleChange} />\n                <TextField fullWidth label=\"–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã\" name=\"workSchedule\" value={formData.workSchedule} onChange={handleChange} />\n              </>\n            )}\n\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\n              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å\n            </Button>\n            <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel} sx={{ ml: 1 }}>\n              –û—Ç–º–µ–Ω–∞\n            </Button>\n          </>\n        ) : (\n          <>\n            <ItemTitle>{item.name}</ItemTitle>\n            <Typography>{item.description}</Typography>\n            <Typography color=\"text.secondary\">–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {item.type}</Typography>\n\n            {item.type === \"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\" && (\n              <>\n                <Typography>–¢–∏–ø: {item.propertyType}</Typography>\n                <Typography>–ü–ª–æ—â–∞–¥—å: {item.area} –º¬≤</Typography>\n                <Typography>–ö–æ–º–Ω–∞—Ç: {item.rooms}</Typography>\n                <Typography>–¶–µ–Ω–∞: {item.price} ‚ÇΩ</Typography>\n              </>\n            )}\n\n            {item.type === \"–ê–≤—Ç–æ\" && (\n              <>\n                <Typography>–ú–∞—Ä–∫–∞: {item.brand}</Typography>\n                <Typography>–ú–æ–¥–µ–ª—å: {item.model}</Typography>\n                <Typography>–ì–æ–¥: {item.year}</Typography>\n                <Typography>–ü—Ä–æ–±–µ–≥: {item.mileage} –∫–º</Typography>\n              </>\n            )}\n\n            {item.type === \"–£—Å–ª—É–≥–∏\" && (\n              <>\n                <Typography>–¢–∏–ø —É—Å–ª—É–≥–∏: {item.serviceType}</Typography>\n                <Typography>–û–ø—ã—Ç: {item.experience} –ª–µ—Ç</Typography>\n                <Typography>–°—Ç–æ–∏–º–æ—Å—Ç—å: {item.cost} ‚ÇΩ</Typography>\n                <Typography>–ì—Ä–∞—Ñ–∏–∫: {item.workSchedule}</Typography>\n              </>\n            )}\n\n            <EditButton variant=\"contained\" onClick={handleEdit}>\n              –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n            </EditButton>\n          </>\n        )}\n      </ItemCard>\n    </ItemContainer>\n  );\n}\n\nexport default ItemPage;\n */\n\n/* import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { ItemContainer, ItemCard, ItemTitle, StyledButton } from \"../styles/itemStyles\";\nimport { Typography } from \"@mui/material\";\nimport { BaseFields } from \"../components/BaseFields\";\nimport { RealEstateFields, AutoFields, ServiceFields } from \"../components/AdditionalFields\";\nimport { ActionButtons } from \"../components/ActionButtons\";\nimport { EditItemButton } from \"../components/EditButton\";\n\nfunction ItemPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [item, setItem] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({});\n\n  useEffect(() => {\n    fetch(`/items/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setItem(data);\n        setFormData(data);\n      });\n  }, [id]);\n\n  const handleEdit = () => setIsEditing(true);\n  const handleCancel = () => {\n    setIsEditing(false);\n    setFormData(item);\n  };\n\n  const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const handleSave = () => {\n    fetch(`/items/${id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => res.json())\n      .then((updatedItem) => {\n        setItem(updatedItem);\n        setIsEditing(false);\n      });\n  };\n\n  if (!item) return <Typography align=\"center\">–ó–∞–≥—Ä—É–∑–∫–∞...</Typography>;\n\n  return (\n    <ItemContainer>\n      <ItemCard>\n        {isEditing ? (\n          <>\n            //{/* üîπ –û–±—â–∏–µ –ø–æ–ª—è }\n            <BaseFields formData={formData} handleChange={handleChange} />\n\n            //{/* üîπ –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π }\n            {formData.type === \"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\" && <RealEstateFields formData={formData} handleChange={handleChange} />}\n            {formData.type === \"–ê–≤—Ç–æ\" && <AutoFields formData={formData} handleChange={handleChange} />}\n            {formData.type === \"–£—Å–ª—É–≥–∏\" && <ServiceFields formData={formData} handleChange={handleChange} />}\n\n            //{/* üîπ –ö–Ω–æ–ø–∫–∏ \"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å\" –∏ \"–û—Ç–º–µ–Ω–∞\" }\n            <ActionButtons handleSave={handleSave} handleCancel={handleCancel} />\n          </>\n        ) : (\n          <>\n            <ItemTitle>{item.name}</ItemTitle>\n            <Typography>{item.description}</Typography>\n            <Typography color=\"text.secondary\">–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {item.type}</Typography>\n\n            {item.type === \"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\" && <RealEstateFields formData={item} handleChange={() => {}} />}\n            {item.type === \"–ê–≤—Ç–æ\" && <AutoFields formData={item} handleChange={() => {}} />}\n            {item.type === \"–£—Å–ª—É–≥–∏\" && <ServiceFields formData={item} handleChange={() => {}} />}\n\n            //{  –ö–Ω–æ–ø–∫–∞ \"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\" }\n            <EditItemButton handleEdit={handleEdit} />\n          </>\n        )}\n      </ItemCard>\n    </ItemContainer>\n  );\n}\n\nexport default ItemPage;\n */\n/////////////////////////////////\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { ItemContainer, ItemCard, ItemTitle } from \"../styles/itemStyles\";\nimport { Typography } from \"@mui/material\";\nimport { RealEstateFields, AutoFields, ServiceFields } from \"../components/AdditionalFields\";\nimport { EditItemButton } from \"../components/EditButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ItemPage() {\n  _s();\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [item, setItem] = useState(null);\n  useEffect(() => {\n    fetch(`/items/${id}`).then(res => res.json()).then(data => setItem(data));\n  }, [id]);\n  if (!item) return /*#__PURE__*/_jsxDEV(Typography, {\n    align: \"center\",\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 303,\n    columnNumber: 21\n  }, this);\n  const handleEdit = () => {\n    navigate(`/form`, {\n      state: {\n        itemData: item\n      }\n    }); // üîπ –ü–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ –≤ /form\n  };\n  return /*#__PURE__*/_jsxDEV(ItemContainer, {\n    children: /*#__PURE__*/_jsxDEV(ItemCard, {\n      children: [/*#__PURE__*/_jsxDEV(ItemTitle, {\n        children: item.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        children: item.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        color: \"text.secondary\",\n        children: [\"\\u041A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044F: \", item.type]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 9\n      }, this), item.type === \"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\" && /*#__PURE__*/_jsxDEV(RealEstateFields, {\n        formData: item,\n        handleChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 316,\n        columnNumber: 42\n      }, this), item.type === \"–ê–≤—Ç–æ\" && /*#__PURE__*/_jsxDEV(AutoFields, {\n        formData: item,\n        handleChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 317,\n        columnNumber: 34\n      }, this), item.type === \"–£—Å–ª—É–≥–∏\" && /*#__PURE__*/_jsxDEV(ServiceFields, {\n        formData: item,\n        handleChange: () => {}\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 318,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(EditItemButton, {\n        handleEdit: handleEdit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n}\n_s(ItemPage, \"WFraxxCsX01cye+PCMI+Fof39U0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ItemPage;\nexport default ItemPage;\nvar _c;\n$RefreshReg$(_c, \"ItemPage\");","map":{"version":3,"names":["React","useEffect","useState","useParams","useNavigate","ItemContainer","ItemCard","ItemTitle","Typography","RealEstateFields","AutoFields","ServiceFields","EditItemButton","jsxDEV","_jsxDEV","ItemPage","_s","id","navigate","item","setItem","fetch","then","res","json","data","align","children","fileName","_jsxFileName","lineNumber","columnNumber","handleEdit","state","itemData","name","description","color","type","formData","handleChange","_c","$RefreshReg$"],"sources":["/home/skot/projects/avito/client/src/pages/ItemPage.js"],"sourcesContent":["/* import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { ItemContainer, ItemCard, ItemTitle, EditButton } from \"../styles/itemStyles\";\nimport { Typography } from \"@mui/material\";\n\nfunction ItemPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    fetch(`/items/${id}`)\n      .then((res) => res.json())\n      .then((data) => setItem(data));\n  }, [id]);\n\n  const handleEdit = () => {\n    navigate(`/form?edit=${id}`);\n  };\n\n  if (!item) return <Typography align=\"center\">–ó–∞–≥—Ä—É–∑–∫–∞...</Typography>;\n\n  return (\n    <ItemContainer>\n      <ItemCard>\n        <ItemTitle>{item.name}</ItemTitle>\n        <Typography>{item.description}</Typography>\n        <Typography color=\"text.secondary\">–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {item.type}</Typography>\n\n        <EditButton variant=\"contained\" onClick={handleEdit}>\n          –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n        </EditButton>\n      </ItemCard>\n    </ItemContainer>\n  );\n}\n\nexport default ItemPage;\n */\n////////////////////////////////////////////////\n/* import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { ItemContainer, ItemCard, ItemTitle, EditButton } from \"../styles/itemStyles\";\nimport { Typography, TextField, Button, Select, MenuItem } from \"@mui/material\";\n\nfunction ItemPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [item, setItem] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({});\n\n  useEffect(() => {\n    fetch(`/items/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setItem(data);\n        setFormData(data);\n      });\n  }, [id]);\n\n  const handleEdit = () => {\n    setIsEditing(true);\n  };\n\n  const handleCancel = () => {\n    setIsEditing(false);\n    setFormData(item); // –û—Ç–º–µ–Ω—è–µ–º –∏–∑–º–µ–Ω–µ–Ω–∏—è\n  };\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSave = () => {\n    fetch(`/items/${id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => res.json())\n      .then((updatedItem) => {\n        setItem(updatedItem);\n        setIsEditing(false);\n      });\n  };\n\n  if (!item) return <Typography align=\"center\">–ó–∞–≥—Ä—É–∑–∫–∞...</Typography>;\n\n  return (\n    <ItemContainer>\n      <ItemCard>\n        {isEditing ? (\n          <>\n            <TextField fullWidth label=\"–ù–∞–∑–≤–∞–Ω–∏–µ\" name=\"name\" value={formData.name} onChange={handleChange} required />\n            <TextField\n              fullWidth\n              label=\"–û–ø–∏—Å–∞–Ω–∏–µ\"\n              name=\"description\"\n              value={formData.description}\n              onChange={handleChange}\n              multiline\n              rows={3}\n              required\n            />\n            <TextField fullWidth label=\"–õ–æ–∫–∞—Ü–∏—è\" name=\"location\" value={formData.location} onChange={handleChange} required />\n\n            <Select fullWidth name=\"type\" value={formData.type} onChange={handleChange} required>\n              <MenuItem value=\"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\">–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å</MenuItem>\n              <MenuItem value=\"–ê–≤—Ç–æ\">–ê–≤—Ç–æ</MenuItem>\n              <MenuItem value=\"–£—Å–ª—É–≥–∏\">–£—Å–ª—É–≥–∏</MenuItem>\n            </Select>\n\n            {formData.type === \"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\" && (\n              <>\n                <TextField fullWidth label=\"–¢–∏–ø –Ω–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç–∏\" name=\"propertyType\" value={formData.propertyType} onChange={handleChange} />\n                <TextField fullWidth label=\"–ü–ª–æ—â–∞–¥—å (–º¬≤)\" name=\"area\" type=\"number\" value={formData.area} onChange={handleChange} />\n                <TextField fullWidth label=\"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–º–Ω–∞—Ç\" name=\"rooms\" type=\"number\" value={formData.rooms} onChange={handleChange} />\n                <TextField fullWidth label=\"–¶–µ–Ω–∞ (‚ÇΩ)\" name=\"price\" type=\"number\" value={formData.price} onChange={handleChange} />\n              </>\n            )}\n\n            {formData.type === \"–ê–≤—Ç–æ\" && (\n              <>\n                <TextField fullWidth label=\"–ú–∞—Ä–∫–∞\" name=\"brand\" value={formData.brand} onChange={handleChange} />\n                <TextField fullWidth label=\"–ú–æ–¥–µ–ª—å\" name=\"model\" value={formData.model} onChange={handleChange} />\n                <TextField fullWidth label=\"–ì–æ–¥ –≤—ã–ø—É—Å–∫–∞\" name=\"year\" type=\"number\" value={formData.year} onChange={handleChange} />\n                <TextField fullWidth label=\"–ü—Ä–æ–±–µ–≥ (–∫–º)\" name=\"mileage\" type=\"number\" value={formData.mileage} onChange={handleChange} />\n              </>\n            )}\n\n            {formData.type === \"–£—Å–ª—É–≥–∏\" && (\n              <>\n                <TextField fullWidth label=\"–¢–∏–ø —É—Å–ª—É–≥–∏\" name=\"serviceType\" value={formData.serviceType} onChange={handleChange} />\n                <TextField fullWidth label=\"–û–ø—ã—Ç (–ª–µ—Ç)\" name=\"experience\" type=\"number\" value={formData.experience} onChange={handleChange} />\n                <TextField fullWidth label=\"–°—Ç–æ–∏–º–æ—Å—Ç—å (‚ÇΩ)\" name=\"cost\" type=\"number\" value={formData.cost} onChange={handleChange} />\n                <TextField fullWidth label=\"–ì—Ä–∞—Ñ–∏–∫ —Ä–∞–±–æ—Ç—ã\" name=\"workSchedule\" value={formData.workSchedule} onChange={handleChange} />\n              </>\n            )}\n\n            <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\n              –°–æ—Ö—Ä–∞–Ω–∏—Ç—å\n            </Button>\n            <Button variant=\"outlined\" color=\"secondary\" onClick={handleCancel} sx={{ ml: 1 }}>\n              –û—Ç–º–µ–Ω–∞\n            </Button>\n          </>\n        ) : (\n          <>\n            <ItemTitle>{item.name}</ItemTitle>\n            <Typography>{item.description}</Typography>\n            <Typography color=\"text.secondary\">–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {item.type}</Typography>\n\n            {item.type === \"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\" && (\n              <>\n                <Typography>–¢–∏–ø: {item.propertyType}</Typography>\n                <Typography>–ü–ª–æ—â–∞–¥—å: {item.area} –º¬≤</Typography>\n                <Typography>–ö–æ–º–Ω–∞—Ç: {item.rooms}</Typography>\n                <Typography>–¶–µ–Ω–∞: {item.price} ‚ÇΩ</Typography>\n              </>\n            )}\n\n            {item.type === \"–ê–≤—Ç–æ\" && (\n              <>\n                <Typography>–ú–∞—Ä–∫–∞: {item.brand}</Typography>\n                <Typography>–ú–æ–¥–µ–ª—å: {item.model}</Typography>\n                <Typography>–ì–æ–¥: {item.year}</Typography>\n                <Typography>–ü—Ä–æ–±–µ–≥: {item.mileage} –∫–º</Typography>\n              </>\n            )}\n\n            {item.type === \"–£—Å–ª—É–≥–∏\" && (\n              <>\n                <Typography>–¢–∏–ø —É—Å–ª—É–≥–∏: {item.serviceType}</Typography>\n                <Typography>–û–ø—ã—Ç: {item.experience} –ª–µ—Ç</Typography>\n                <Typography>–°—Ç–æ–∏–º–æ—Å—Ç—å: {item.cost} ‚ÇΩ</Typography>\n                <Typography>–ì—Ä–∞—Ñ–∏–∫: {item.workSchedule}</Typography>\n              </>\n            )}\n\n            <EditButton variant=\"contained\" onClick={handleEdit}>\n              –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\n            </EditButton>\n          </>\n        )}\n      </ItemCard>\n    </ItemContainer>\n  );\n}\n\nexport default ItemPage;\n */\n\n\n/* import React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { ItemContainer, ItemCard, ItemTitle, StyledButton } from \"../styles/itemStyles\";\nimport { Typography } from \"@mui/material\";\nimport { BaseFields } from \"../components/BaseFields\";\nimport { RealEstateFields, AutoFields, ServiceFields } from \"../components/AdditionalFields\";\nimport { ActionButtons } from \"../components/ActionButtons\";\nimport { EditItemButton } from \"../components/EditButton\";\n\nfunction ItemPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [item, setItem] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  const [formData, setFormData] = useState({});\n\n  useEffect(() => {\n    fetch(`/items/${id}`)\n      .then((res) => res.json())\n      .then((data) => {\n        setItem(data);\n        setFormData(data);\n      });\n  }, [id]);\n\n  const handleEdit = () => setIsEditing(true);\n  const handleCancel = () => {\n    setIsEditing(false);\n    setFormData(item);\n  };\n\n  const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const handleSave = () => {\n    fetch(`/items/${id}`, {\n      method: \"PUT\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(formData),\n    })\n      .then((res) => res.json())\n      .then((updatedItem) => {\n        setItem(updatedItem);\n        setIsEditing(false);\n      });\n  };\n\n  if (!item) return <Typography align=\"center\">–ó–∞–≥—Ä—É–∑–∫–∞...</Typography>;\n\n  return (\n    <ItemContainer>\n      <ItemCard>\n        {isEditing ? (\n          <>\n            //{/* üîπ –û–±—â–∏–µ –ø–æ–ª—è }\n            <BaseFields formData={formData} handleChange={handleChange} />\n\n            //{/* üîπ –°–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–µ –ø–æ–ª—è –¥–ª—è —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π }\n            {formData.type === \"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\" && <RealEstateFields formData={formData} handleChange={handleChange} />}\n            {formData.type === \"–ê–≤—Ç–æ\" && <AutoFields formData={formData} handleChange={handleChange} />}\n            {formData.type === \"–£—Å–ª—É–≥–∏\" && <ServiceFields formData={formData} handleChange={handleChange} />}\n\n            //{/* üîπ –ö–Ω–æ–ø–∫–∏ \"–°–æ—Ö—Ä–∞–Ω–∏—Ç—å\" –∏ \"–û—Ç–º–µ–Ω–∞\" }\n            <ActionButtons handleSave={handleSave} handleCancel={handleCancel} />\n          </>\n        ) : (\n          <>\n            <ItemTitle>{item.name}</ItemTitle>\n            <Typography>{item.description}</Typography>\n            <Typography color=\"text.secondary\">–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {item.type}</Typography>\n\n            {item.type === \"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\" && <RealEstateFields formData={item} handleChange={() => {}} />}\n            {item.type === \"–ê–≤—Ç–æ\" && <AutoFields formData={item} handleChange={() => {}} />}\n            {item.type === \"–£—Å–ª—É–≥–∏\" && <ServiceFields formData={item} handleChange={() => {}} />}\n\n            //{  –ö–Ω–æ–ø–∫–∞ \"–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å\" }\n            <EditItemButton handleEdit={handleEdit} />\n          </>\n        )}\n      </ItemCard>\n    </ItemContainer>\n  );\n}\n\nexport default ItemPage;\n */\n/////////////////////////////////\n\n\n\n\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport { ItemContainer, ItemCard, ItemTitle } from \"../styles/itemStyles\";\nimport { Typography } from \"@mui/material\";\nimport { RealEstateFields, AutoFields, ServiceFields } from \"../components/AdditionalFields\";\nimport { EditItemButton } from \"../components/EditButton\";\n\nfunction ItemPage() {\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const [item, setItem] = useState(null);\n\n  useEffect(() => {\n    fetch(`/items/${id}`)\n      .then((res) => res.json())\n      .then((data) => setItem(data));\n  }, [id]);\n\n  if (!item) return <Typography align=\"center\">–ó–∞–≥—Ä—É–∑–∫–∞...</Typography>;\n\n  const handleEdit = () => {\n    navigate(`/form`, { state: { itemData: item } }); // üîπ –ü–µ—Ä–µ–¥–∞—ë–º –¥–∞–Ω–Ω—ã–µ –≤ /form\n  };\n\n  return (\n    <ItemContainer>\n      <ItemCard>\n        <ItemTitle>{item.name}</ItemTitle>\n        <Typography>{item.description}</Typography>\n        <Typography color=\"text.secondary\">–ö–∞—Ç–µ–≥–æ—Ä–∏—è: {item.type}</Typography>\n\n        {item.type === \"–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å\" && <RealEstateFields formData={item} handleChange={() => {}} />}\n        {item.type === \"–ê–≤—Ç–æ\" && <AutoFields formData={item} handleChange={() => {}} />}\n        {item.type === \"–£—Å–ª—É–≥–∏\" && <ServiceFields formData={item} handleChange={() => {}} />}\n\n        {/* üîπ –†–µ–¥–∏—Ä–µ–∫—Ç –Ω–∞ /form —Å –¥–∞–Ω–Ω—ã–º–∏ */}\n        <EditItemButton handleEdit={handleEdit} />\n      </ItemCard>\n    </ItemContainer>\n  );\n}\n\nexport default ItemPage;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}