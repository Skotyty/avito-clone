{"ast":null,"code":"var _jsxFileName = \"/home/skot/projects/avito/client/src/pages/FormPage.js\",\n  _s = $RefreshSig$();\n/* import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormInput, FormButton } from \"../styles/formStyles\";\nimport { MenuItem, Select } from \"@mui/material\";\n\nfunction FormPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!formData.name.trim() || !formData.description.trim() || !formData.location.trim() || !formData.type) {\n      console.error(\"Заполните все обязательные поля!\");\n      return;\n    }\n\n    // Формируем объект с только нужными данными\n    const requestData = {\n      name: formData.name.trim(),\n      description: formData.description.trim(),\n      location: formData.location.trim(),\n      type: formData.type,\n    };\n\n    if (formData.type === \"Недвижимость\") {\n      requestData.propertyType = formData.propertyType || \"Квартира\";\n      requestData.area = formData.area ? Number(formData.area) : undefined;\n      requestData.rooms = formData.rooms ? Number(formData.rooms) : undefined;\n      requestData.price = formData.price ? Number(formData.price) : undefined;\n    } else if (formData.type === \"Авто\") {\n      requestData.brand = formData.brand || \"Не указано\";\n      requestData.model = formData.model || \"Не указано\";\n      requestData.year = formData.year ? Number(formData.year) : undefined;\n      requestData.mileage = formData.mileage ? Number(formData.mileage) : undefined;\n    } else if (formData.type === \"Услуги\") {\n      requestData.serviceType = formData.serviceType || \"Не указано\";\n      requestData.experience = formData.experience ? Number(formData.experience) : undefined;\n      requestData.cost = formData.cost ? Number(formData.cost) : undefined;\n      requestData.workSchedule = formData.workSchedule || \"Гибкий\";\n    }\n\n    console.log(\"Отправляем данные:\", requestData);\n\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(requestData),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          return res.json().then((err) => {\n            throw new Error(`Ошибка ${res.status}: ${err.error || \"Неизвестная ошибка\"}`);\n          });\n        }\n        return res.json();\n      })\n      .then(() => navigate(\"/\"))\n      .catch((error) => console.error(\"Ошибка запроса:\", error));\n  };\n\n  return (\n    <div>\n      <h1>Разместить объявление</h1>\n      <form onSubmit={handleSubmit}>\n        <input name=\"name\" placeholder=\"Название\" onChange={handleChange} required />\n        <textarea name=\"description\" placeholder=\"Описание\" onChange={handleChange} required />\n        <input name=\"location\" placeholder=\"Локация\" onChange={handleChange} required />\n\n        <select name=\"type\" onChange={handleChange} required>\n          <option value=\"\">Выберите категорию</option>\n          <option value=\"Недвижимость\">Недвижимость</option>\n          <option value=\"Авто\">Авто</option>\n          <option value=\"Услуги\">Услуги</option>\n        </select>\n\n     \n        {formData.type === \"Недвижимость\" && (\n          <>\n            <input name=\"propertyType\" placeholder=\"Тип недвижимости\" onChange={handleChange} required />\n            <input name=\"area\" type=\"number\" placeholder=\"Площадь (м²)\" onChange={handleChange} required />\n            <input name=\"rooms\" type=\"number\" placeholder=\"Количество комнат\" onChange={handleChange} required />\n            <input name=\"price\" type=\"number\" placeholder=\"Цена (₽)\" onChange={handleChange} required />\n          </>\n        )}\n\n        {formData.type === \"Авто\" && (\n          <>\n            <input name=\"brand\" placeholder=\"Марка\" onChange={handleChange} required />\n            <input name=\"model\" placeholder=\"Модель\" onChange={handleChange} required />\n            <input name=\"year\" type=\"number\" placeholder=\"Год выпуска\" onChange={handleChange} required />\n            <input name=\"mileage\" type=\"number\" placeholder=\"Пробег (км)\" onChange={handleChange} />\n          </>\n        )}\n\n       \n        {formData.type === \"Услуги\" && (\n          <>\n            <input name=\"serviceType\" placeholder=\"Тип услуги\" onChange={handleChange} required />\n            <input name=\"experience\" type=\"number\" placeholder=\"Опыт (лет)\" onChange={handleChange} required />\n            <input name=\"cost\" type=\"number\" placeholder=\"Стоимость (₽)\" onChange={handleChange} required />\n            <input name=\"workSchedule\" placeholder=\"График работы\" onChange={handleChange} />\n          </>\n        )}\n\n        <button type=\"submit\">Добавить</button>\n      </form>\n    </div>\n  );\n}\n\nexport default FormPage;\n */\n///////////////////////////////////////////////\n/* import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormInput, FormButton } from \"../styles/formStyles\";\nimport { MenuItem, Select } from \"@mui/material\";\n\nfunction FormPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!formData.name.trim() || !formData.description.trim() || !formData.location.trim() || !formData.type) {\n      console.error(\"Заполните все обязательные поля!\");\n      return;\n    }\n\n    const requestData = {\n      name: formData.name.trim(),\n      description: formData.description.trim(),\n      location: formData.location.trim(),\n      type: formData.type,\n    };\n\n    if (formData.type === \"Недвижимость\") {\n      requestData.propertyType = formData.propertyType || \"Квартира\";\n      requestData.area = formData.area ? Number(formData.area) : undefined;\n      requestData.rooms = formData.rooms ? Number(formData.rooms) : undefined;\n      requestData.price = formData.price ? Number(formData.price) : undefined;\n    } else if (formData.type === \"Авто\") {\n      requestData.brand = formData.brand || \"Не указано\";\n      requestData.model = formData.model || \"Не указано\";\n      requestData.year = formData.year ? Number(formData.year) : undefined;\n      requestData.mileage = formData.mileage ? Number(formData.mileage) : undefined;\n    } else if (formData.type === \"Услуги\") {\n      requestData.serviceType = formData.serviceType || \"Не указано\";\n      requestData.experience = formData.experience ? Number(formData.experience) : undefined;\n      requestData.cost = formData.cost ? Number(formData.cost) : undefined;\n      requestData.workSchedule = formData.workSchedule || \"Гибкий\";\n    }\n\n    console.log(\"Отправляем данные:\", requestData);\n\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(requestData),\n    }).then(() => navigate(\"/list\"));\n  };\n\n  return (\n    <FormContainer>\n      <FormCard>\n        <FormTitle variant=\"h5\">Разместить объявление</FormTitle>\n        <form onSubmit={handleSubmit}>\n          <FormInput label=\"Название\" name=\"name\" onChange={handleChange} required />\n          <FormInput label=\"Описание\" name=\"description\" onChange={handleChange} required multiline rows={3} />\n          <FormInput label=\"Локация\" name=\"location\" onChange={handleChange} required />\n\n          <Select fullWidth name=\"type\" value={formData.type} onChange={handleChange} required>\n            <MenuItem value=\"\">Выберите категорию</MenuItem>\n            <MenuItem value=\"Недвижимость\">Недвижимость</MenuItem>\n            <MenuItem value=\"Авто\">Авто</MenuItem>\n            <MenuItem value=\"Услуги\">Услуги</MenuItem>\n          </Select>\n\n          <FormButton type=\"submit\" variant=\"contained\">\n            Добавить\n          </FormButton>\n        </form>\n      </FormCard>\n    </FormContainer>\n  );\n}\n\nexport default FormPage;\n */\n///////////////////////////////////////////\n/* import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormInput, FormButton } from \"../styles/formStyles\";\nimport { MenuItem, Select, Typography } from \"@mui/material\";\n\nfunction FormPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!formData.name.trim() || !formData.description.trim() || !formData.location.trim() || !formData.type) {\n      console.error(\"Заполните все обязательные поля!\");\n      return;\n    }\n\n    const requestData = { ...formData };\n\n    console.log(\"Отправляем данные:\", requestData);\n\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(requestData),\n    }).then(() => navigate(\"/list\"));\n  };\n\n  return (\n    <FormContainer>\n      <FormCard>\n        <FormTitle variant=\"h5\">Разместить объявление</FormTitle>\n        <form onSubmit={handleSubmit}>\n          <FormInput label=\"Название\" name=\"name\" onChange={handleChange} required />\n          <FormInput label=\"Описание\" name=\"description\" onChange={handleChange} required multiline rows={3} />\n          <FormInput label=\"Локация\" name=\"location\" onChange={handleChange} required />\n\n          //{ Выбор категории }\n          <Select fullWidth name=\"type\" value={formData.type} onChange={handleChange} required>\n            <MenuItem value=\"\">Выберите категорию</MenuItem>\n            <MenuItem value=\"Недвижимость\">Недвижимость</MenuItem>\n            <MenuItem value=\"Авто\">Авто</MenuItem>\n            <MenuItem value=\"Услуги\">Услуги</MenuItem>\n          </Select>\n\n          //{ Поля для недвижимости }\n          {formData.type === \"Недвижимость\" && (\n            <>\n              <FormInput label=\"Тип недвижимости\" name=\"propertyType\" onChange={handleChange} required />\n              <FormInput label=\"Площадь (м²)\" name=\"area\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"Количество комнат\" name=\"rooms\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"Цена (₽)\" name=\"price\" type=\"number\" onChange={handleChange} required />\n            </>\n          )}\n\n          //{ Поля для авто }\n          {formData.type === \"Авто\" && (\n            <>\n              <FormInput label=\"Марка\" name=\"brand\" onChange={handleChange} required />\n              <FormInput label=\"Модель\" name=\"model\" onChange={handleChange} required />\n              <FormInput label=\"Год выпуска\" name=\"year\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"Пробег (км)\" name=\"mileage\" type=\"number\" onChange={handleChange} />\n            </>\n          )}\n\n          //{ Поля для услуг }\n          {formData.type === \"Услуги\" && (\n            <>\n              <FormInput label=\"Тип услуги\" name=\"serviceType\" onChange={handleChange} required />\n              <FormInput label=\"Опыт (лет)\" name=\"experience\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"Стоимость (₽)\" name=\"cost\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"График работы\" name=\"workSchedule\" onChange={handleChange} />\n            </>\n          )}\n\n          <FormButton type=\"submit\" variant=\"contained\">\n            Добавить\n          </FormButton>\n        </form>\n      </FormCard>\n    </FormContainer>\n  );\n}\n\nexport default FormPage;\n */\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormButton } from \"../styles/formStyles\";\nimport { BaseFields } from \"../components/BaseFields\";\nimport { RealEstateFields, AutoFields, ServiceFields } from \"../components/AdditionalFields\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction FormPage() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\"\n  });\n  const navigate = useNavigate();\n  const handleChange = e => setFormData({\n    ...formData,\n    [e.target.name]: e.target.value\n  });\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(() => navigate(\"/list\"));\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: /*#__PURE__*/_jsxDEV(FormCard, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        variant: \"h5\",\n        children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u044C \\u043E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 376,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(BaseFields, {\n          formData: formData,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 11\n        }, this), formData.type === \"Недвижимость\" && /*#__PURE__*/_jsxDEV(RealEstateFields, {\n          formData: formData,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 48\n        }, this), formData.type === \"Авто\" && /*#__PURE__*/_jsxDEV(AutoFields, {\n          formData: formData,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 40\n        }, this), formData.type === \"Услуги\" && /*#__PURE__*/_jsxDEV(ServiceFields, {\n          formData: formData,\n          handleChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 42\n        }, this), /*#__PURE__*/_jsxDEV(FormButton, {\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 375,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 374,\n    columnNumber: 5\n  }, this);\n}\n_s(FormPage, \"FctKSKSj+bCgn5wbrOoG5+ApIe0=\", false, function () {\n  return [useNavigate];\n});\n_c = FormPage;\nexport default FormPage;\nvar _c;\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"names":["React","useState","useNavigate","FormContainer","FormCard","FormTitle","FormButton","BaseFields","RealEstateFields","AutoFields","ServiceFields","jsxDEV","_jsxDEV","FormPage","_s","formData","setFormData","name","description","location","type","navigate","handleChange","e","target","value","handleSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","_c","$RefreshReg$"],"sources":["/home/skot/projects/avito/client/src/pages/FormPage.js"],"sourcesContent":["/* import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormInput, FormButton } from \"../styles/formStyles\";\nimport { MenuItem, Select } from \"@mui/material\";\n\nfunction FormPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!formData.name.trim() || !formData.description.trim() || !formData.location.trim() || !formData.type) {\n      console.error(\"Заполните все обязательные поля!\");\n      return;\n    }\n\n    // Формируем объект с только нужными данными\n    const requestData = {\n      name: formData.name.trim(),\n      description: formData.description.trim(),\n      location: formData.location.trim(),\n      type: formData.type,\n    };\n\n    if (formData.type === \"Недвижимость\") {\n      requestData.propertyType = formData.propertyType || \"Квартира\";\n      requestData.area = formData.area ? Number(formData.area) : undefined;\n      requestData.rooms = formData.rooms ? Number(formData.rooms) : undefined;\n      requestData.price = formData.price ? Number(formData.price) : undefined;\n    } else if (formData.type === \"Авто\") {\n      requestData.brand = formData.brand || \"Не указано\";\n      requestData.model = formData.model || \"Не указано\";\n      requestData.year = formData.year ? Number(formData.year) : undefined;\n      requestData.mileage = formData.mileage ? Number(formData.mileage) : undefined;\n    } else if (formData.type === \"Услуги\") {\n      requestData.serviceType = formData.serviceType || \"Не указано\";\n      requestData.experience = formData.experience ? Number(formData.experience) : undefined;\n      requestData.cost = formData.cost ? Number(formData.cost) : undefined;\n      requestData.workSchedule = formData.workSchedule || \"Гибкий\";\n    }\n\n    console.log(\"Отправляем данные:\", requestData);\n\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(requestData),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          return res.json().then((err) => {\n            throw new Error(`Ошибка ${res.status}: ${err.error || \"Неизвестная ошибка\"}`);\n          });\n        }\n        return res.json();\n      })\n      .then(() => navigate(\"/\"))\n      .catch((error) => console.error(\"Ошибка запроса:\", error));\n  };\n\n  return (\n    <div>\n      <h1>Разместить объявление</h1>\n      <form onSubmit={handleSubmit}>\n        <input name=\"name\" placeholder=\"Название\" onChange={handleChange} required />\n        <textarea name=\"description\" placeholder=\"Описание\" onChange={handleChange} required />\n        <input name=\"location\" placeholder=\"Локация\" onChange={handleChange} required />\n\n        <select name=\"type\" onChange={handleChange} required>\n          <option value=\"\">Выберите категорию</option>\n          <option value=\"Недвижимость\">Недвижимость</option>\n          <option value=\"Авто\">Авто</option>\n          <option value=\"Услуги\">Услуги</option>\n        </select>\n\n     \n        {formData.type === \"Недвижимость\" && (\n          <>\n            <input name=\"propertyType\" placeholder=\"Тип недвижимости\" onChange={handleChange} required />\n            <input name=\"area\" type=\"number\" placeholder=\"Площадь (м²)\" onChange={handleChange} required />\n            <input name=\"rooms\" type=\"number\" placeholder=\"Количество комнат\" onChange={handleChange} required />\n            <input name=\"price\" type=\"number\" placeholder=\"Цена (₽)\" onChange={handleChange} required />\n          </>\n        )}\n\n        {formData.type === \"Авто\" && (\n          <>\n            <input name=\"brand\" placeholder=\"Марка\" onChange={handleChange} required />\n            <input name=\"model\" placeholder=\"Модель\" onChange={handleChange} required />\n            <input name=\"year\" type=\"number\" placeholder=\"Год выпуска\" onChange={handleChange} required />\n            <input name=\"mileage\" type=\"number\" placeholder=\"Пробег (км)\" onChange={handleChange} />\n          </>\n        )}\n\n       \n        {formData.type === \"Услуги\" && (\n          <>\n            <input name=\"serviceType\" placeholder=\"Тип услуги\" onChange={handleChange} required />\n            <input name=\"experience\" type=\"number\" placeholder=\"Опыт (лет)\" onChange={handleChange} required />\n            <input name=\"cost\" type=\"number\" placeholder=\"Стоимость (₽)\" onChange={handleChange} required />\n            <input name=\"workSchedule\" placeholder=\"График работы\" onChange={handleChange} />\n          </>\n        )}\n\n        <button type=\"submit\">Добавить</button>\n      </form>\n    </div>\n  );\n}\n\nexport default FormPage;\n */\n///////////////////////////////////////////////\n/* import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormInput, FormButton } from \"../styles/formStyles\";\nimport { MenuItem, Select } from \"@mui/material\";\n\nfunction FormPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!formData.name.trim() || !formData.description.trim() || !formData.location.trim() || !formData.type) {\n      console.error(\"Заполните все обязательные поля!\");\n      return;\n    }\n\n    const requestData = {\n      name: formData.name.trim(),\n      description: formData.description.trim(),\n      location: formData.location.trim(),\n      type: formData.type,\n    };\n\n    if (formData.type === \"Недвижимость\") {\n      requestData.propertyType = formData.propertyType || \"Квартира\";\n      requestData.area = formData.area ? Number(formData.area) : undefined;\n      requestData.rooms = formData.rooms ? Number(formData.rooms) : undefined;\n      requestData.price = formData.price ? Number(formData.price) : undefined;\n    } else if (formData.type === \"Авто\") {\n      requestData.brand = formData.brand || \"Не указано\";\n      requestData.model = formData.model || \"Не указано\";\n      requestData.year = formData.year ? Number(formData.year) : undefined;\n      requestData.mileage = formData.mileage ? Number(formData.mileage) : undefined;\n    } else if (formData.type === \"Услуги\") {\n      requestData.serviceType = formData.serviceType || \"Не указано\";\n      requestData.experience = formData.experience ? Number(formData.experience) : undefined;\n      requestData.cost = formData.cost ? Number(formData.cost) : undefined;\n      requestData.workSchedule = formData.workSchedule || \"Гибкий\";\n    }\n\n    console.log(\"Отправляем данные:\", requestData);\n\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(requestData),\n    }).then(() => navigate(\"/list\"));\n  };\n\n  return (\n    <FormContainer>\n      <FormCard>\n        <FormTitle variant=\"h5\">Разместить объявление</FormTitle>\n        <form onSubmit={handleSubmit}>\n          <FormInput label=\"Название\" name=\"name\" onChange={handleChange} required />\n          <FormInput label=\"Описание\" name=\"description\" onChange={handleChange} required multiline rows={3} />\n          <FormInput label=\"Локация\" name=\"location\" onChange={handleChange} required />\n\n          <Select fullWidth name=\"type\" value={formData.type} onChange={handleChange} required>\n            <MenuItem value=\"\">Выберите категорию</MenuItem>\n            <MenuItem value=\"Недвижимость\">Недвижимость</MenuItem>\n            <MenuItem value=\"Авто\">Авто</MenuItem>\n            <MenuItem value=\"Услуги\">Услуги</MenuItem>\n          </Select>\n\n          <FormButton type=\"submit\" variant=\"contained\">\n            Добавить\n          </FormButton>\n        </form>\n      </FormCard>\n    </FormContainer>\n  );\n}\n\nexport default FormPage;\n */\n///////////////////////////////////////////\n/* import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormInput, FormButton } from \"../styles/formStyles\";\nimport { MenuItem, Select, Typography } from \"@mui/material\";\n\nfunction FormPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!formData.name.trim() || !formData.description.trim() || !formData.location.trim() || !formData.type) {\n      console.error(\"Заполните все обязательные поля!\");\n      return;\n    }\n\n    const requestData = { ...formData };\n\n    console.log(\"Отправляем данные:\", requestData);\n\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(requestData),\n    }).then(() => navigate(\"/list\"));\n  };\n\n  return (\n    <FormContainer>\n      <FormCard>\n        <FormTitle variant=\"h5\">Разместить объявление</FormTitle>\n        <form onSubmit={handleSubmit}>\n          <FormInput label=\"Название\" name=\"name\" onChange={handleChange} required />\n          <FormInput label=\"Описание\" name=\"description\" onChange={handleChange} required multiline rows={3} />\n          <FormInput label=\"Локация\" name=\"location\" onChange={handleChange} required />\n\n          //{ Выбор категории }\n          <Select fullWidth name=\"type\" value={formData.type} onChange={handleChange} required>\n            <MenuItem value=\"\">Выберите категорию</MenuItem>\n            <MenuItem value=\"Недвижимость\">Недвижимость</MenuItem>\n            <MenuItem value=\"Авто\">Авто</MenuItem>\n            <MenuItem value=\"Услуги\">Услуги</MenuItem>\n          </Select>\n\n          //{ Поля для недвижимости }\n          {formData.type === \"Недвижимость\" && (\n            <>\n              <FormInput label=\"Тип недвижимости\" name=\"propertyType\" onChange={handleChange} required />\n              <FormInput label=\"Площадь (м²)\" name=\"area\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"Количество комнат\" name=\"rooms\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"Цена (₽)\" name=\"price\" type=\"number\" onChange={handleChange} required />\n            </>\n          )}\n\n          //{ Поля для авто }\n          {formData.type === \"Авто\" && (\n            <>\n              <FormInput label=\"Марка\" name=\"brand\" onChange={handleChange} required />\n              <FormInput label=\"Модель\" name=\"model\" onChange={handleChange} required />\n              <FormInput label=\"Год выпуска\" name=\"year\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"Пробег (км)\" name=\"mileage\" type=\"number\" onChange={handleChange} />\n            </>\n          )}\n\n          //{ Поля для услуг }\n          {formData.type === \"Услуги\" && (\n            <>\n              <FormInput label=\"Тип услуги\" name=\"serviceType\" onChange={handleChange} required />\n              <FormInput label=\"Опыт (лет)\" name=\"experience\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"Стоимость (₽)\" name=\"cost\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"График работы\" name=\"workSchedule\" onChange={handleChange} />\n            </>\n          )}\n\n          <FormButton type=\"submit\" variant=\"contained\">\n            Добавить\n          </FormButton>\n        </form>\n      </FormCard>\n    </FormContainer>\n  );\n}\n\nexport default FormPage;\n */\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormButton } from \"../styles/formStyles\";\nimport { BaseFields } from \"../components/BaseFields\";\nimport { RealEstateFields, AutoFields, ServiceFields } from \"../components/AdditionalFields\";\n\nfunction FormPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(formData),\n    }).then(() => navigate(\"/list\"));\n  };\n\n  return (\n    <FormContainer>\n      <FormCard>\n        <FormTitle variant=\"h5\">Разместить объявление</FormTitle>\n        <form onSubmit={handleSubmit}>\n          {/* 🔹 Общие поля */}\n          <BaseFields formData={formData} handleChange={handleChange} />\n\n          {/* 🔹 Специфичные поля для категорий */}\n          {formData.type === \"Недвижимость\" && <RealEstateFields formData={formData} handleChange={handleChange} />}\n          {formData.type === \"Авто\" && <AutoFields formData={formData} handleChange={handleChange} />}\n          {formData.type === \"Услуги\" && <ServiceFields formData={formData} handleChange={handleChange} />}\n\n          <FormButton type=\"submit\" variant=\"contained\">Добавить</FormButton>\n        </form>\n      </FormCard>\n    </FormContainer>\n  );\n}\n\nexport default FormPage;\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}