{"ast":null,"code":"// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useLocation } from \"react-router-dom\";\n// import { FormContainer, FormCard } from \"../styles/formStyles\";\n// import { BaseFields } from \"../components/BaseFields\";\n// import { RealEstateFields, AutoFields, ServiceFields } from \"../components/AdditionalFields\";\n// import FormHeader from \"../components/FormHeader\";\n// import FormSubmitButton from \"../components/FormSubmitButton\";\n// import FormImageUploader from \"../components/FormImageUploader\";\n\n// function FormPage() {\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const existingData = location.state?.itemData || null;\n\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     location: \"\",\n//     type: \"\",\n//     image: \"\",\n//   });\n\n//   const [imageFile, setImageFile] = useState(null);\n\n//   useEffect(() => {\n//     if (existingData) {\n//       setFormData(existingData);\n//     }\n//   }, [existingData]);\n\n//   const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n//   const handleFileChange = (e) => {\n//     setImageFile(e.target.files[0]);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     let imageUrl = formData.image;\n\n//     if (imageFile) {\n//       const formDataImage = new FormData();\n//       formDataImage.append(\"image\", imageFile);\n\n//       const response = await fetch(\"/upload\", {\n//         method: \"POST\",\n//         body: formDataImage,\n//       });\n\n//       const data = await response.json();\n//       imageUrl = data.imageUrl;\n//     }\n\n//     const method = existingData ? \"PUT\" : \"POST\";\n//     const url = existingData ? `/items/${existingData.id}` : \"/items\";\n\n//     fetch(url, {\n//       method,\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ ...formData, image: imageUrl }),\n//     }).then(() => navigate(\"/list\"));\n//   };\n\n//   return (\n//     <FormContainer>\n//       <FormCard>\n//         <FormHeader isEdit={!!existingData} />\n//         <form onSubmit={handleSubmit}>\n//           <BaseFields formData={formData} handleChange={handleChange} />\n\n//           <FormImageUploader handleFileChange={handleFileChange} preview={formData.image} />\n\n//           {formData.type === \"Недвижимость\" && <RealEstateFields formData={formData} handleChange={handleChange} />}\n//           {formData.type === \"Авто\" && <AutoFields formData={formData} handleChange={handleChange} />}\n//           {formData.type === \"Услуги\" && <ServiceFields formData={formData} handleChange={handleChange} />}\n\n//           <FormSubmitButton isEdit={!!existingData} />\n//         </form>\n//       </FormCard>\n//     </FormContainer>\n//   );\n// }\n\n// export default FormPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useSearchParams } from \"react-router-dom\";\n// import { uploadImage } from \"../utils/uploadService\"; // Функция загрузки изображения\n// import { FormContainer, FormCard } from \"../styles/formStyles\";\n// import { FormFields } from \"../components/FormFields\";\n// import { FormActions } from \"../components/FormActions\";\n// import FileUpload from \"../components/FileUpload\";\n\n// const FormPage = () => {\n//   const [searchParams] = useSearchParams();\n//   const editId = searchParams.get(\"edit\"); // Получаем ID для редактирования\n//   const navigate = useNavigate();\n\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     location: \"\",\n//     type: \"\",\n//     image: \"\",\n//     propertyType: \"\",\n//     area: \"\",\n//     rooms: \"\",\n//     price: \"\",\n//     brand: \"\",\n//     model: \"\",\n//     year: \"\",\n//     mileage: \"\",\n//     serviceType: \"\",\n//     experience: \"\",\n//     cost: \"\",\n//     workSchedule: \"\",\n//   });\n\n//   // Загружаем существующие данные при редактировании\n//   useEffect(() => {\n//     if (editId) {\n//       fetch(`/items/${editId}`)\n//         .then((res) => res.json())\n//         .then((data) => setFormData(data));\n//     }\n//   }, [editId]);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleFileSelect = async (file) => {\n//     const uploadedUrl = await uploadImage(file);\n//     setFormData({ ...formData, image: uploadedUrl });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     const requestData = {\n//       ...formData,\n//       area: formData.area ? Number(formData.area) : undefined,\n//       rooms: formData.rooms ? Number(formData.rooms) : undefined,\n//       price: formData.price ? Number(formData.price) : undefined,\n//       year: formData.year ? Number(formData.year) : undefined,\n//       mileage: formData.mileage ? Number(formData.mileage) : undefined,\n//       experience: formData.experience ? Number(formData.experience) : undefined,\n//       cost: formData.cost ? Number(formData.cost) : undefined,\n//     };\n\n//     fetch(editId ? `/items/${editId}` : \"/items\", {\n//       method: editId ? \"PUT\" : \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(requestData),\n//     })\n//       .then(() => navigate(\"/list\"))\n//       .catch((error) => console.error(\"Ошибка запроса:\", error));\n//   };\n\n//   return (\n//     <FormContainer>\n//       <FormCard>\n//         <FormFields formData={formData} handleChange={handleChange} />\n//         <FileUpload onFileSelect={handleFileSelect} />\n//         <FormActions handleSubmit={handleSubmit} editMode={Boolean(editId)} />\n//       </FormCard>\n//     </FormContainer>\n//   );\n// };\n\n// export default FormPage;","map":{"version":3,"names":[],"sources":["/home/skot/projects/avito/client/src/pages/FormPage.js"],"sourcesContent":["// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useLocation } from \"react-router-dom\";\n// import { FormContainer, FormCard } from \"../styles/formStyles\";\n// import { BaseFields } from \"../components/BaseFields\";\n// import { RealEstateFields, AutoFields, ServiceFields } from \"../components/AdditionalFields\";\n// import FormHeader from \"../components/FormHeader\";\n// import FormSubmitButton from \"../components/FormSubmitButton\";\n// import FormImageUploader from \"../components/FormImageUploader\";\n\n// function FormPage() {\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const existingData = location.state?.itemData || null;\n\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     location: \"\",\n//     type: \"\",\n//     image: \"\",\n//   });\n\n//   const [imageFile, setImageFile] = useState(null);\n\n//   useEffect(() => {\n//     if (existingData) {\n//       setFormData(existingData);\n//     }\n//   }, [existingData]);\n\n//   const handleChange = (e) => setFormData({ ...formData, [e.target.name]: e.target.value });\n\n//   const handleFileChange = (e) => {\n//     setImageFile(e.target.files[0]);\n//   };\n\n//   const handleSubmit = async (e) => {\n//     e.preventDefault();\n\n//     let imageUrl = formData.image;\n\n//     if (imageFile) {\n//       const formDataImage = new FormData();\n//       formDataImage.append(\"image\", imageFile);\n\n//       const response = await fetch(\"/upload\", {\n//         method: \"POST\",\n//         body: formDataImage,\n//       });\n\n//       const data = await response.json();\n//       imageUrl = data.imageUrl;\n//     }\n\n//     const method = existingData ? \"PUT\" : \"POST\";\n//     const url = existingData ? `/items/${existingData.id}` : \"/items\";\n\n//     fetch(url, {\n//       method,\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify({ ...formData, image: imageUrl }),\n//     }).then(() => navigate(\"/list\"));\n//   };\n\n//   return (\n//     <FormContainer>\n//       <FormCard>\n//         <FormHeader isEdit={!!existingData} />\n//         <form onSubmit={handleSubmit}>\n//           <BaseFields formData={formData} handleChange={handleChange} />\n\n//           <FormImageUploader handleFileChange={handleFileChange} preview={formData.image} />\n\n//           {formData.type === \"Недвижимость\" && <RealEstateFields formData={formData} handleChange={handleChange} />}\n//           {formData.type === \"Авто\" && <AutoFields formData={formData} handleChange={handleChange} />}\n//           {formData.type === \"Услуги\" && <ServiceFields formData={formData} handleChange={handleChange} />}\n\n//           <FormSubmitButton isEdit={!!existingData} />\n//         </form>\n//       </FormCard>\n//     </FormContainer>\n//   );\n// }\n\n// export default FormPage;\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useSearchParams } from \"react-router-dom\";\n// import { uploadImage } from \"../utils/uploadService\"; // Функция загрузки изображения\n// import { FormContainer, FormCard } from \"../styles/formStyles\";\n// import { FormFields } from \"../components/FormFields\";\n// import { FormActions } from \"../components/FormActions\";\n// import FileUpload from \"../components/FileUpload\";\n\n// const FormPage = () => {\n//   const [searchParams] = useSearchParams();\n//   const editId = searchParams.get(\"edit\"); // Получаем ID для редактирования\n//   const navigate = useNavigate();\n\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     location: \"\",\n//     type: \"\",\n//     image: \"\",\n//     propertyType: \"\",\n//     area: \"\",\n//     rooms: \"\",\n//     price: \"\",\n//     brand: \"\",\n//     model: \"\",\n//     year: \"\",\n//     mileage: \"\",\n//     serviceType: \"\",\n//     experience: \"\",\n//     cost: \"\",\n//     workSchedule: \"\",\n//   });\n\n//   // Загружаем существующие данные при редактировании\n//   useEffect(() => {\n//     if (editId) {\n//       fetch(`/items/${editId}`)\n//         .then((res) => res.json())\n//         .then((data) => setFormData(data));\n//     }\n//   }, [editId]);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleFileSelect = async (file) => {\n//     const uploadedUrl = await uploadImage(file);\n//     setFormData({ ...formData, image: uploadedUrl });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     const requestData = {\n//       ...formData,\n//       area: formData.area ? Number(formData.area) : undefined,\n//       rooms: formData.rooms ? Number(formData.rooms) : undefined,\n//       price: formData.price ? Number(formData.price) : undefined,\n//       year: formData.year ? Number(formData.year) : undefined,\n//       mileage: formData.mileage ? Number(formData.mileage) : undefined,\n//       experience: formData.experience ? Number(formData.experience) : undefined,\n//       cost: formData.cost ? Number(formData.cost) : undefined,\n//     };\n\n//     fetch(editId ? `/items/${editId}` : \"/items\", {\n//       method: editId ? \"PUT\" : \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(requestData),\n//     })\n//       .then(() => navigate(\"/list\"))\n//       .catch((error) => console.error(\"Ошибка запроса:\", error));\n//   };\n\n//   return (\n//     <FormContainer>\n//       <FormCard>\n//         <FormFields formData={formData} handleChange={handleChange} />\n//         <FileUpload onFileSelect={handleFileSelect} />\n//         <FormActions handleSubmit={handleSubmit} editMode={Boolean(editId)} />\n//       </FormCard>\n//     </FormContainer>\n//   );\n// };\n\n// export default FormPage;\n\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}