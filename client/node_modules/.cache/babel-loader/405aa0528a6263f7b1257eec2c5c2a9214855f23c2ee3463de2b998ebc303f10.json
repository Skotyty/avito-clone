{"ast":null,"code":"var _jsxFileName = \"/home/skot/projects/avito/client/src/pages/FormPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormWrapper } from \"../styles/formStyles\";\nimport { uploadImage } from \"../utils/uploadService\";\nimport { FormFields } from \"../components/FormFields\";\nimport FormActions from \"../components/FormActions\";\nimport BackToHomeButton from \"../components/BackToHomeButton\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormPage = () => {\n  _s();\n  var _location$state;\n  const navigate = useNavigate();\n  const location = useLocation();\n  const existingData = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.item) || null;\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    image: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\"\n  });\n  useEffect(() => {\n    if (existingData) {\n      setFormData(existingData);\n    }\n  }, [existingData]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleImageUpload = async e => {\n    const file = e.target.files[0];\n    if (!file) return;\n    const imageUrl = await uploadImage(file);\n    setFormData({\n      ...formData,\n      image: imageUrl\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    fetch(existingData ? `/items/${existingData.id}` : \"/items\", {\n      method: existingData ? \"PUT\" : \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(formData)\n    }).then(() => navigate(\"/list\"));\n  };\n  return /*#__PURE__*/_jsxDEV(FormWrapper, {\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      children: /*#__PURE__*/_jsxDEV(FormCard, {\n        children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n          children: existingData ? \"Редактировать объявление\" : \"Разместить объявление\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(FormFields, {\n            formData: formData,\n            handleChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n            isEditing: !!existingData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BackToHomeButton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(FormPage, \"QXOa1rQQoTPtzAoxB2KNLLxqZX4=\", false, function () {\n  return [useNavigate, useLocation];\n});\n_c = FormPage;\nexport default FormPage;\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useLocation } from \"react-router-dom\";\n// import { FormContainer, FormCard, FormTitle, FormWrapper, ImagePreview, UploadButton } from \"../styles/formStyles\"; \n// import { uploadImage } from \"../utils/uploadService\";\n// import { FormFields } from \"../components/FormFields\";\n// import FormActions from \"../components/FormActions\";\n// import BackToHomeButton from \"../components/BackToHomeButton\";\n\n// const FormPage = () => {\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const existingData = location.state?.item || null;\n\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     location: \"\",\n//     type: \"\",\n//     image: \"\", // ✅ Добавлено поле фото\n//     propertyType: \"\",\n//     area: \"\",\n//     rooms: \"\",\n//     price: \"\",\n//     brand: \"\",\n//     model: \"\",\n//     year: \"\",\n//     mileage: \"\",\n//     serviceType: \"\",\n//     experience: \"\",\n//     cost: \"\",\n//     workSchedule: \"\",\n//   });\n\n//   useEffect(() => {\n//     if (existingData) {\n//       setFormData(existingData);\n//     }\n//   }, [existingData]);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleImageUpload = async (e) => {\n//     const file = e.target.files[0];\n//     if (!file) return;\n\n//     console.log(\"Файл загружается:\", file.name); // ✅ Проверка в консоли\n//     const imageUrl = await uploadImage(file);\n//     setFormData({ ...formData, image: imageUrl });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     fetch(existingData ? `/items/${existingData.id}` : \"/items\", {\n//       method: existingData ? \"PUT\" : \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(formData),\n//     }).then(() => navigate(\"/list\"));\n//   };\n\n//   return (\n//     <FormWrapper> \n//       <FormContainer>\n//         <FormCard>\n//           <FormTitle>{existingData ? \"Редактировать объявление\" : \"Разместить объявление\"}</FormTitle>\n\n//           <form onSubmit={handleSubmit}>\n//             {/* ✅ Поля формы */}\n//             <FormFields formData={formData} handleChange={handleChange} />\n\n//             {/* ✅ Превью фото */}\n//             {formData.image && <ImagePreview src={formData.image} alt=\"Превью\" />}\n\n//             {/* ✅ Кнопка загрузки фото */}\n//             <UploadButton variant=\"contained\" component=\"label\">\n//               {formData.image ? \"Изменить фото\" : \"Добавить фото\"}\n//               <input type=\"file\" hidden onChange={handleImageUpload} />\n//             </UploadButton>\n\n//             {/* ✅ Кнопки сохранения */}\n//             <FormActions isEditing={!!existingData} />\n//           </form>\n//         </FormCard>\n//       </FormContainer>\n\n//       <BackToHomeButton />\n//     </FormWrapper>\n//   );\n// };\n\n// export default FormPage;\nvar _c;\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","useLocation","FormContainer","FormCard","FormTitle","FormWrapper","uploadImage","FormFields","FormActions","BackToHomeButton","jsxDEV","_jsxDEV","FormPage","_s","_location$state","navigate","location","existingData","state","item","formData","setFormData","name","description","type","image","propertyType","area","rooms","price","brand","model","year","mileage","serviceType","experience","cost","workSchedule","handleChange","e","target","value","handleImageUpload","file","files","imageUrl","handleSubmit","preventDefault","fetch","id","method","headers","body","JSON","stringify","then","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","isEditing","_c","$RefreshReg$"],"sources":["/home/skot/projects/avito/client/src/pages/FormPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormWrapper } from \"../styles/formStyles\"; \nimport { uploadImage } from \"../utils/uploadService\";\nimport { FormFields } from \"../components/FormFields\";\nimport FormActions from \"../components/FormActions\";\nimport BackToHomeButton from \"../components/BackToHomeButton\";\n\nconst FormPage = () => {\n  const navigate = useNavigate();\n  const location = useLocation();\n  const existingData = location.state?.item || null;\n\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    image: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\",\n  });\n\n  useEffect(() => {\n    if (existingData) {\n      setFormData(existingData);\n    }\n  }, [existingData]);\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleImageUpload = async (e) => {\n    const file = e.target.files[0];\n    if (!file) return;\n\n    const imageUrl = await uploadImage(file);\n    setFormData({ ...formData, image: imageUrl });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    fetch(existingData ? `/items/${existingData.id}` : \"/items\", {\n      method: existingData ? \"PUT\" : \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(formData),\n    }).then(() => navigate(\"/list\"));\n  };\n\n  return (\n    <FormWrapper> \n      <FormContainer>\n        <FormCard>\n          <FormTitle>{existingData ? \"Редактировать объявление\" : \"Разместить объявление\"}</FormTitle>\n\n          <form onSubmit={handleSubmit}>\n            <FormFields formData={formData} handleChange={handleChange} />\n            <FormActions isEditing={!!existingData} />\n          </form>\n        </FormCard>\n      </FormContainer>\n\n      <BackToHomeButton />\n    </FormWrapper>\n  );\n};\n\nexport default FormPage;\n\n\n// import React, { useState, useEffect } from \"react\";\n// import { useNavigate, useLocation } from \"react-router-dom\";\n// import { FormContainer, FormCard, FormTitle, FormWrapper, ImagePreview, UploadButton } from \"../styles/formStyles\"; \n// import { uploadImage } from \"../utils/uploadService\";\n// import { FormFields } from \"../components/FormFields\";\n// import FormActions from \"../components/FormActions\";\n// import BackToHomeButton from \"../components/BackToHomeButton\";\n\n// const FormPage = () => {\n//   const navigate = useNavigate();\n//   const location = useLocation();\n//   const existingData = location.state?.item || null;\n\n//   const [formData, setFormData] = useState({\n//     name: \"\",\n//     description: \"\",\n//     location: \"\",\n//     type: \"\",\n//     image: \"\", // ✅ Добавлено поле фото\n//     propertyType: \"\",\n//     area: \"\",\n//     rooms: \"\",\n//     price: \"\",\n//     brand: \"\",\n//     model: \"\",\n//     year: \"\",\n//     mileage: \"\",\n//     serviceType: \"\",\n//     experience: \"\",\n//     cost: \"\",\n//     workSchedule: \"\",\n//   });\n\n//   useEffect(() => {\n//     if (existingData) {\n//       setFormData(existingData);\n//     }\n//   }, [existingData]);\n\n//   const handleChange = (e) => {\n//     setFormData({ ...formData, [e.target.name]: e.target.value });\n//   };\n\n//   const handleImageUpload = async (e) => {\n//     const file = e.target.files[0];\n//     if (!file) return;\n\n//     console.log(\"Файл загружается:\", file.name); // ✅ Проверка в консоли\n//     const imageUrl = await uploadImage(file);\n//     setFormData({ ...formData, image: imageUrl });\n//   };\n\n//   const handleSubmit = (e) => {\n//     e.preventDefault();\n\n//     fetch(existingData ? `/items/${existingData.id}` : \"/items\", {\n//       method: existingData ? \"PUT\" : \"POST\",\n//       headers: { \"Content-Type\": \"application/json\" },\n//       body: JSON.stringify(formData),\n//     }).then(() => navigate(\"/list\"));\n//   };\n\n//   return (\n//     <FormWrapper> \n//       <FormContainer>\n//         <FormCard>\n//           <FormTitle>{existingData ? \"Редактировать объявление\" : \"Разместить объявление\"}</FormTitle>\n\n//           <form onSubmit={handleSubmit}>\n//             {/* ✅ Поля формы */}\n//             <FormFields formData={formData} handleChange={handleChange} />\n\n//             {/* ✅ Превью фото */}\n//             {formData.image && <ImagePreview src={formData.image} alt=\"Превью\" />}\n\n//             {/* ✅ Кнопка загрузки фото */}\n//             <UploadButton variant=\"contained\" component=\"label\">\n//               {formData.image ? \"Изменить фото\" : \"Добавить фото\"}\n//               <input type=\"file\" hidden onChange={handleImageUpload} />\n//             </UploadButton>\n\n//             {/* ✅ Кнопки сохранения */}\n//             <FormActions isEditing={!!existingData} />\n//           </form>\n//         </FormCard>\n//       </FormContainer>\n\n//       <BackToHomeButton />\n//     </FormWrapper>\n//   );\n// };\n\n// export default FormPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}