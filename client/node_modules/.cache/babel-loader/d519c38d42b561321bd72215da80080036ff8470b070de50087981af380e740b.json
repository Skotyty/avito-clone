{"ast":null,"code":"var _jsxFileName = \"/home/skot/projects/avito/client/src/pages/FormPage.js\",\n  _s = $RefreshSig$();\n/* import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormInput, FormButton } from \"../styles/formStyles\";\nimport { MenuItem, Select } from \"@mui/material\";\n\nfunction FormPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!formData.name.trim() || !formData.description.trim() || !formData.location.trim() || !formData.type) {\n      console.error(\"Заполните все обязательные поля!\");\n      return;\n    }\n\n    // Формируем объект с только нужными данными\n    const requestData = {\n      name: formData.name.trim(),\n      description: formData.description.trim(),\n      location: formData.location.trim(),\n      type: formData.type,\n    };\n\n    if (formData.type === \"Недвижимость\") {\n      requestData.propertyType = formData.propertyType || \"Квартира\";\n      requestData.area = formData.area ? Number(formData.area) : undefined;\n      requestData.rooms = formData.rooms ? Number(formData.rooms) : undefined;\n      requestData.price = formData.price ? Number(formData.price) : undefined;\n    } else if (formData.type === \"Авто\") {\n      requestData.brand = formData.brand || \"Не указано\";\n      requestData.model = formData.model || \"Не указано\";\n      requestData.year = formData.year ? Number(formData.year) : undefined;\n      requestData.mileage = formData.mileage ? Number(formData.mileage) : undefined;\n    } else if (formData.type === \"Услуги\") {\n      requestData.serviceType = formData.serviceType || \"Не указано\";\n      requestData.experience = formData.experience ? Number(formData.experience) : undefined;\n      requestData.cost = formData.cost ? Number(formData.cost) : undefined;\n      requestData.workSchedule = formData.workSchedule || \"Гибкий\";\n    }\n\n    console.log(\"Отправляем данные:\", requestData);\n\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(requestData),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          return res.json().then((err) => {\n            throw new Error(`Ошибка ${res.status}: ${err.error || \"Неизвестная ошибка\"}`);\n          });\n        }\n        return res.json();\n      })\n      .then(() => navigate(\"/\"))\n      .catch((error) => console.error(\"Ошибка запроса:\", error));\n  };\n\n  return (\n    <div>\n      <h1>Разместить объявление</h1>\n      <form onSubmit={handleSubmit}>\n        <input name=\"name\" placeholder=\"Название\" onChange={handleChange} required />\n        <textarea name=\"description\" placeholder=\"Описание\" onChange={handleChange} required />\n        <input name=\"location\" placeholder=\"Локация\" onChange={handleChange} required />\n\n        <select name=\"type\" onChange={handleChange} required>\n          <option value=\"\">Выберите категорию</option>\n          <option value=\"Недвижимость\">Недвижимость</option>\n          <option value=\"Авто\">Авто</option>\n          <option value=\"Услуги\">Услуги</option>\n        </select>\n\n     \n        {formData.type === \"Недвижимость\" && (\n          <>\n            <input name=\"propertyType\" placeholder=\"Тип недвижимости\" onChange={handleChange} required />\n            <input name=\"area\" type=\"number\" placeholder=\"Площадь (м²)\" onChange={handleChange} required />\n            <input name=\"rooms\" type=\"number\" placeholder=\"Количество комнат\" onChange={handleChange} required />\n            <input name=\"price\" type=\"number\" placeholder=\"Цена (₽)\" onChange={handleChange} required />\n          </>\n        )}\n\n        {formData.type === \"Авто\" && (\n          <>\n            <input name=\"brand\" placeholder=\"Марка\" onChange={handleChange} required />\n            <input name=\"model\" placeholder=\"Модель\" onChange={handleChange} required />\n            <input name=\"year\" type=\"number\" placeholder=\"Год выпуска\" onChange={handleChange} required />\n            <input name=\"mileage\" type=\"number\" placeholder=\"Пробег (км)\" onChange={handleChange} />\n          </>\n        )}\n\n       \n        {formData.type === \"Услуги\" && (\n          <>\n            <input name=\"serviceType\" placeholder=\"Тип услуги\" onChange={handleChange} required />\n            <input name=\"experience\" type=\"number\" placeholder=\"Опыт (лет)\" onChange={handleChange} required />\n            <input name=\"cost\" type=\"number\" placeholder=\"Стоимость (₽)\" onChange={handleChange} required />\n            <input name=\"workSchedule\" placeholder=\"График работы\" onChange={handleChange} />\n          </>\n        )}\n\n        <button type=\"submit\">Добавить</button>\n      </form>\n    </div>\n  );\n}\n\nexport default FormPage;\n */\n///////////////////////////////////////////////\n/* import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormInput, FormButton } from \"../styles/formStyles\";\nimport { MenuItem, Select } from \"@mui/material\";\n\nfunction FormPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!formData.name.trim() || !formData.description.trim() || !formData.location.trim() || !formData.type) {\n      console.error(\"Заполните все обязательные поля!\");\n      return;\n    }\n\n    const requestData = {\n      name: formData.name.trim(),\n      description: formData.description.trim(),\n      location: formData.location.trim(),\n      type: formData.type,\n    };\n\n    if (formData.type === \"Недвижимость\") {\n      requestData.propertyType = formData.propertyType || \"Квартира\";\n      requestData.area = formData.area ? Number(formData.area) : undefined;\n      requestData.rooms = formData.rooms ? Number(formData.rooms) : undefined;\n      requestData.price = formData.price ? Number(formData.price) : undefined;\n    } else if (formData.type === \"Авто\") {\n      requestData.brand = formData.brand || \"Не указано\";\n      requestData.model = formData.model || \"Не указано\";\n      requestData.year = formData.year ? Number(formData.year) : undefined;\n      requestData.mileage = formData.mileage ? Number(formData.mileage) : undefined;\n    } else if (formData.type === \"Услуги\") {\n      requestData.serviceType = formData.serviceType || \"Не указано\";\n      requestData.experience = formData.experience ? Number(formData.experience) : undefined;\n      requestData.cost = formData.cost ? Number(formData.cost) : undefined;\n      requestData.workSchedule = formData.workSchedule || \"Гибкий\";\n    }\n\n    console.log(\"Отправляем данные:\", requestData);\n\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(requestData),\n    }).then(() => navigate(\"/list\"));\n  };\n\n  return (\n    <FormContainer>\n      <FormCard>\n        <FormTitle variant=\"h5\">Разместить объявление</FormTitle>\n        <form onSubmit={handleSubmit}>\n          <FormInput label=\"Название\" name=\"name\" onChange={handleChange} required />\n          <FormInput label=\"Описание\" name=\"description\" onChange={handleChange} required multiline rows={3} />\n          <FormInput label=\"Локация\" name=\"location\" onChange={handleChange} required />\n\n          <Select fullWidth name=\"type\" value={formData.type} onChange={handleChange} required>\n            <MenuItem value=\"\">Выберите категорию</MenuItem>\n            <MenuItem value=\"Недвижимость\">Недвижимость</MenuItem>\n            <MenuItem value=\"Авто\">Авто</MenuItem>\n            <MenuItem value=\"Услуги\">Услуги</MenuItem>\n          </Select>\n\n          <FormButton type=\"submit\" variant=\"contained\">\n            Добавить\n          </FormButton>\n        </form>\n      </FormCard>\n    </FormContainer>\n  );\n}\n\nexport default FormPage;\n */\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormInput, FormButton } from \"../styles/formStyles\";\nimport { MenuItem, Select, Typography } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction FormPage() {\n  _s();\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\"\n  });\n  const navigate = useNavigate();\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (!formData.name.trim() || !formData.description.trim() || !formData.location.trim() || !formData.type) {\n      console.error(\"Заполните все обязательные поля!\");\n      return;\n    }\n    const requestData = {\n      ...formData\n    };\n    console.log(\"Отправляем данные:\", requestData);\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify(requestData)\n    }).then(() => navigate(\"/list\"));\n  };\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: /*#__PURE__*/_jsxDEV(FormCard, {\n      children: [/*#__PURE__*/_jsxDEV(FormTitle, {\n        variant: \"h5\",\n        children: \"\\u0420\\u0430\\u0437\\u043C\\u0435\\u0441\\u0442\\u0438\\u0442\\u044C \\u043E\\u0431\\u044A\\u044F\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435\",\n          name: \"name\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435\",\n          name: \"description\",\n          onChange: handleChange,\n          required: true,\n          multiline: true,\n          rows: 3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n          label: \"\\u041B\\u043E\\u043A\\u0430\\u0446\\u0438\\u044F\",\n          name: \"location\",\n          onChange: handleChange,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Select, {\n          fullWidth: true,\n          name: \"type\",\n          value: formData.type,\n          onChange: handleChange,\n          required: true,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u0430\\u0442\\u0435\\u0433\\u043E\\u0440\\u0438\\u044E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\\u041D\\u0435\\u0434\\u0432\\u0438\\u0436\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\",\n            children: \"\\u041D\\u0435\\u0434\\u0432\\u0438\\u0436\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\\u0410\\u0432\\u0442\\u043E\",\n            children: \"\\u0410\\u0432\\u0442\\u043E\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\\u0423\\u0441\\u043B\\u0443\\u0433\\u0438\",\n            children: \"\\u0423\\u0441\\u043B\\u0443\\u0433\\u0438\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 297,\n          columnNumber: 11\n        }, this), formData.type === \"Недвижимость\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"\\u0422\\u0438\\u043F \\u043D\\u0435\\u0434\\u0432\\u0438\\u0436\\u0438\\u043C\\u043E\\u0441\\u0442\\u0438\",\n            name: \"propertyType\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"\\u041F\\u043B\\u043E\\u0449\\u0430\\u0434\\u044C (\\u043C\\xB2)\",\n            name: \"area\",\n            type: \"number\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442\",\n            name: \"rooms\",\n            type: \"number\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"\\u0426\\u0435\\u043D\\u0430 (\\u20BD)\",\n            name: \"price\",\n            type: \"number\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), formData.type === \"Авто\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"\\u041C\\u0430\\u0440\\u043A\\u0430\",\n            name: \"brand\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"\\u041C\\u043E\\u0434\\u0435\\u043B\\u044C\",\n            name: \"model\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"\\u0413\\u043E\\u0434 \\u0432\\u044B\\u043F\\u0443\\u0441\\u043A\\u0430\",\n            name: \"year\",\n            type: \"number\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"\\u041F\\u0440\\u043E\\u0431\\u0435\\u0433 (\\u043A\\u043C)\",\n            name: \"mileage\",\n            type: \"number\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), formData.type === \"Услуги\" && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"\\u0422\\u0438\\u043F \\u0443\\u0441\\u043B\\u0443\\u0433\\u0438\",\n            name: \"serviceType\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"\\u041E\\u043F\\u044B\\u0442 (\\u043B\\u0435\\u0442)\",\n            name: \"experience\",\n            type: \"number\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"\\u0421\\u0442\\u043E\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C (\\u20BD)\",\n            name: \"cost\",\n            type: \"number\",\n            onChange: handleChange,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 329,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormInput, {\n            label: \"\\u0413\\u0440\\u0430\\u0444\\u0438\\u043A \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\",\n            name: \"workSchedule\",\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(FormButton, {\n          type: \"submit\",\n          variant: \"contained\",\n          children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 334,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 288,\n    columnNumber: 5\n  }, this);\n}\n_s(FormPage, \"P/9ETtx6d6FIvkY5j361C/YEjfc=\", false, function () {\n  return [useNavigate];\n});\n_c = FormPage;\nexport default FormPage;\nvar _c;\n$RefreshReg$(_c, \"FormPage\");","map":{"version":3,"names":["React","useState","useNavigate","FormContainer","FormCard","FormTitle","FormInput","FormButton","MenuItem","Select","Typography","jsxDEV","_jsxDEV","Fragment","_Fragment","FormPage","_s","formData","setFormData","name","description","location","type","propertyType","area","rooms","price","brand","model","year","mileage","serviceType","experience","cost","workSchedule","navigate","handleChange","e","target","value","handleSubmit","preventDefault","trim","console","error","requestData","log","fetch","method","headers","body","JSON","stringify","then","children","variant","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","label","onChange","required","multiline","rows","fullWidth","_c","$RefreshReg$"],"sources":["/home/skot/projects/avito/client/src/pages/FormPage.js"],"sourcesContent":["/* import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormInput, FormButton } from \"../styles/formStyles\";\nimport { MenuItem, Select } from \"@mui/material\";\n\nfunction FormPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!formData.name.trim() || !formData.description.trim() || !formData.location.trim() || !formData.type) {\n      console.error(\"Заполните все обязательные поля!\");\n      return;\n    }\n\n    // Формируем объект с только нужными данными\n    const requestData = {\n      name: formData.name.trim(),\n      description: formData.description.trim(),\n      location: formData.location.trim(),\n      type: formData.type,\n    };\n\n    if (formData.type === \"Недвижимость\") {\n      requestData.propertyType = formData.propertyType || \"Квартира\";\n      requestData.area = formData.area ? Number(formData.area) : undefined;\n      requestData.rooms = formData.rooms ? Number(formData.rooms) : undefined;\n      requestData.price = formData.price ? Number(formData.price) : undefined;\n    } else if (formData.type === \"Авто\") {\n      requestData.brand = formData.brand || \"Не указано\";\n      requestData.model = formData.model || \"Не указано\";\n      requestData.year = formData.year ? Number(formData.year) : undefined;\n      requestData.mileage = formData.mileage ? Number(formData.mileage) : undefined;\n    } else if (formData.type === \"Услуги\") {\n      requestData.serviceType = formData.serviceType || \"Не указано\";\n      requestData.experience = formData.experience ? Number(formData.experience) : undefined;\n      requestData.cost = formData.cost ? Number(formData.cost) : undefined;\n      requestData.workSchedule = formData.workSchedule || \"Гибкий\";\n    }\n\n    console.log(\"Отправляем данные:\", requestData);\n\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(requestData),\n    })\n      .then((res) => {\n        if (!res.ok) {\n          return res.json().then((err) => {\n            throw new Error(`Ошибка ${res.status}: ${err.error || \"Неизвестная ошибка\"}`);\n          });\n        }\n        return res.json();\n      })\n      .then(() => navigate(\"/\"))\n      .catch((error) => console.error(\"Ошибка запроса:\", error));\n  };\n\n  return (\n    <div>\n      <h1>Разместить объявление</h1>\n      <form onSubmit={handleSubmit}>\n        <input name=\"name\" placeholder=\"Название\" onChange={handleChange} required />\n        <textarea name=\"description\" placeholder=\"Описание\" onChange={handleChange} required />\n        <input name=\"location\" placeholder=\"Локация\" onChange={handleChange} required />\n\n        <select name=\"type\" onChange={handleChange} required>\n          <option value=\"\">Выберите категорию</option>\n          <option value=\"Недвижимость\">Недвижимость</option>\n          <option value=\"Авто\">Авто</option>\n          <option value=\"Услуги\">Услуги</option>\n        </select>\n\n     \n        {formData.type === \"Недвижимость\" && (\n          <>\n            <input name=\"propertyType\" placeholder=\"Тип недвижимости\" onChange={handleChange} required />\n            <input name=\"area\" type=\"number\" placeholder=\"Площадь (м²)\" onChange={handleChange} required />\n            <input name=\"rooms\" type=\"number\" placeholder=\"Количество комнат\" onChange={handleChange} required />\n            <input name=\"price\" type=\"number\" placeholder=\"Цена (₽)\" onChange={handleChange} required />\n          </>\n        )}\n\n        {formData.type === \"Авто\" && (\n          <>\n            <input name=\"brand\" placeholder=\"Марка\" onChange={handleChange} required />\n            <input name=\"model\" placeholder=\"Модель\" onChange={handleChange} required />\n            <input name=\"year\" type=\"number\" placeholder=\"Год выпуска\" onChange={handleChange} required />\n            <input name=\"mileage\" type=\"number\" placeholder=\"Пробег (км)\" onChange={handleChange} />\n          </>\n        )}\n\n       \n        {formData.type === \"Услуги\" && (\n          <>\n            <input name=\"serviceType\" placeholder=\"Тип услуги\" onChange={handleChange} required />\n            <input name=\"experience\" type=\"number\" placeholder=\"Опыт (лет)\" onChange={handleChange} required />\n            <input name=\"cost\" type=\"number\" placeholder=\"Стоимость (₽)\" onChange={handleChange} required />\n            <input name=\"workSchedule\" placeholder=\"График работы\" onChange={handleChange} />\n          </>\n        )}\n\n        <button type=\"submit\">Добавить</button>\n      </form>\n    </div>\n  );\n}\n\nexport default FormPage;\n */\n///////////////////////////////////////////////\n/* import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormInput, FormButton } from \"../styles/formStyles\";\nimport { MenuItem, Select } from \"@mui/material\";\n\nfunction FormPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!formData.name.trim() || !formData.description.trim() || !formData.location.trim() || !formData.type) {\n      console.error(\"Заполните все обязательные поля!\");\n      return;\n    }\n\n    const requestData = {\n      name: formData.name.trim(),\n      description: formData.description.trim(),\n      location: formData.location.trim(),\n      type: formData.type,\n    };\n\n    if (formData.type === \"Недвижимость\") {\n      requestData.propertyType = formData.propertyType || \"Квартира\";\n      requestData.area = formData.area ? Number(formData.area) : undefined;\n      requestData.rooms = formData.rooms ? Number(formData.rooms) : undefined;\n      requestData.price = formData.price ? Number(formData.price) : undefined;\n    } else if (formData.type === \"Авто\") {\n      requestData.brand = formData.brand || \"Не указано\";\n      requestData.model = formData.model || \"Не указано\";\n      requestData.year = formData.year ? Number(formData.year) : undefined;\n      requestData.mileage = formData.mileage ? Number(formData.mileage) : undefined;\n    } else if (formData.type === \"Услуги\") {\n      requestData.serviceType = formData.serviceType || \"Не указано\";\n      requestData.experience = formData.experience ? Number(formData.experience) : undefined;\n      requestData.cost = formData.cost ? Number(formData.cost) : undefined;\n      requestData.workSchedule = formData.workSchedule || \"Гибкий\";\n    }\n\n    console.log(\"Отправляем данные:\", requestData);\n\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(requestData),\n    }).then(() => navigate(\"/list\"));\n  };\n\n  return (\n    <FormContainer>\n      <FormCard>\n        <FormTitle variant=\"h5\">Разместить объявление</FormTitle>\n        <form onSubmit={handleSubmit}>\n          <FormInput label=\"Название\" name=\"name\" onChange={handleChange} required />\n          <FormInput label=\"Описание\" name=\"description\" onChange={handleChange} required multiline rows={3} />\n          <FormInput label=\"Локация\" name=\"location\" onChange={handleChange} required />\n\n          <Select fullWidth name=\"type\" value={formData.type} onChange={handleChange} required>\n            <MenuItem value=\"\">Выберите категорию</MenuItem>\n            <MenuItem value=\"Недвижимость\">Недвижимость</MenuItem>\n            <MenuItem value=\"Авто\">Авто</MenuItem>\n            <MenuItem value=\"Услуги\">Услуги</MenuItem>\n          </Select>\n\n          <FormButton type=\"submit\" variant=\"contained\">\n            Добавить\n          </FormButton>\n        </form>\n      </FormCard>\n    </FormContainer>\n  );\n}\n\nexport default FormPage;\n */\n\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { FormContainer, FormCard, FormTitle, FormInput, FormButton } from \"../styles/formStyles\";\nimport { MenuItem, Select, Typography } from \"@mui/material\";\n\nfunction FormPage() {\n  const [formData, setFormData] = useState({\n    name: \"\",\n    description: \"\",\n    location: \"\",\n    type: \"\",\n    propertyType: \"\",\n    area: \"\",\n    rooms: \"\",\n    price: \"\",\n    brand: \"\",\n    model: \"\",\n    year: \"\",\n    mileage: \"\",\n    serviceType: \"\",\n    experience: \"\",\n    cost: \"\",\n    workSchedule: \"\",\n  });\n\n  const navigate = useNavigate();\n\n  const handleChange = (e) => {\n    setFormData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    if (!formData.name.trim() || !formData.description.trim() || !formData.location.trim() || !formData.type) {\n      console.error(\"Заполните все обязательные поля!\");\n      return;\n    }\n\n    const requestData = { ...formData };\n\n    console.log(\"Отправляем данные:\", requestData);\n\n    fetch(\"/items\", {\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(requestData),\n    }).then(() => navigate(\"/list\"));\n  };\n\n  return (\n    <FormContainer>\n      <FormCard>\n        <FormTitle variant=\"h5\">Разместить объявление</FormTitle>\n        <form onSubmit={handleSubmit}>\n          <FormInput label=\"Название\" name=\"name\" onChange={handleChange} required />\n          <FormInput label=\"Описание\" name=\"description\" onChange={handleChange} required multiline rows={3} />\n          <FormInput label=\"Локация\" name=\"location\" onChange={handleChange} required />\n\n          {/* Выбор категории */}\n          <Select fullWidth name=\"type\" value={formData.type} onChange={handleChange} required>\n            <MenuItem value=\"\">Выберите категорию</MenuItem>\n            <MenuItem value=\"Недвижимость\">Недвижимость</MenuItem>\n            <MenuItem value=\"Авто\">Авто</MenuItem>\n            <MenuItem value=\"Услуги\">Услуги</MenuItem>\n          </Select>\n\n          {/* Поля для недвижимости */}\n          {formData.type === \"Недвижимость\" && (\n            <>\n              <FormInput label=\"Тип недвижимости\" name=\"propertyType\" onChange={handleChange} required />\n              <FormInput label=\"Площадь (м²)\" name=\"area\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"Количество комнат\" name=\"rooms\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"Цена (₽)\" name=\"price\" type=\"number\" onChange={handleChange} required />\n            </>\n          )}\n\n          {/* Поля для авто */}\n          {formData.type === \"Авто\" && (\n            <>\n              <FormInput label=\"Марка\" name=\"brand\" onChange={handleChange} required />\n              <FormInput label=\"Модель\" name=\"model\" onChange={handleChange} required />\n              <FormInput label=\"Год выпуска\" name=\"year\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"Пробег (км)\" name=\"mileage\" type=\"number\" onChange={handleChange} />\n            </>\n          )}\n\n          {/* Поля для услуг */}\n          {formData.type === \"Услуги\" && (\n            <>\n              <FormInput label=\"Тип услуги\" name=\"serviceType\" onChange={handleChange} required />\n              <FormInput label=\"Опыт (лет)\" name=\"experience\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"Стоимость (₽)\" name=\"cost\" type=\"number\" onChange={handleChange} required />\n              <FormInput label=\"График работы\" name=\"workSchedule\" onChange={handleChange} />\n            </>\n          )}\n\n          <FormButton type=\"submit\" variant=\"contained\">\n            Добавить\n          </FormButton>\n        </form>\n      </FormCard>\n    </FormContainer>\n  );\n}\n\nexport default FormPage;\n"],"mappingsvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,SAAS,EAAEC,UAAU,QAAQ,sBAAsB;AAChG,SAASC,QAAQ,EAAEC,MAAM,EAAEC,UAAU,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE7D,SAASC,QAAQA,CAAA,EAAG;EAAAC,EAAA;EAClB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC;IACvCkB,IAAI,EAAE,EAAE;IACRC,WAAW,EAAE,EAAE;IACfC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,YAAY,EAAE,EAAE;IAChBC,IAAI,EAAE,EAAE;IACRC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,IAAI,EAAE,EAAE;IACRC,OAAO,EAAE,EAAE;IACXC,WAAW,EAAE,EAAE;IACfC,UAAU,EAAE,EAAE;IACdC,IAAI,EAAE,EAAE;IACRC,YAAY,EAAE;EAChB,CAAC,CAAC;EAEF,MAAMC,QAAQ,GAAGjC,WAAW,CAAC,CAAC;EAE9B,MAAMkC,YAAY,GAAIC,CAAC,IAAK;IAC1BnB,WAAW,CAAC;MAAE,GAAGD,QAAQ;MAAE,CAACoB,CAAC,CAACC,MAAM,CAACnB,IAAI,GAAGkB,CAAC,CAACC,MAAM,CAACC;IAAM,CAAC,CAAC;EAC/D,CAAC;EAED,MAAMC,YAAY,GAAIH,CAAC,IAAK;IAC1BA,CAAC,CAACI,cAAc,CAAC,CAAC;IAElB,IAAI,CAACxB,QAAQ,CAACE,IAAI,CAACuB,IAAI,CAAC,CAAC,IAAI,CAACzB,QAAQ,CAACG,WAAW,CAACsB,IAAI,CAAC,CAAC,IAAI,CAACzB,QAAQ,CAACI,QAAQ,CAACqB,IAAI,CAAC,CAAC,IAAI,CAACzB,QAAQ,CAACK,IAAI,EAAE;MACxGqB,OAAO,CAACC,KAAK,CAAC,kCAAkC,CAAC;MACjD;IACF;IAEA,MAAMC,WAAW,GAAG;MAAE,GAAG5B;IAAS,CAAC;IAEnC0B,OAAO,CAACG,GAAG,CAAC,oBAAoB,EAAED,WAAW,CAAC;IAE9CE,KAAK,CAAC,QAAQ,EAAE;MACdC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QAAE,cAAc,EAAE;MAAmB,CAAC;MAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,WAAW;IAClC,CAAC,CAAC,CAACQ,IAAI,CAAC,MAAMlB,QAAQ,CAAC,OAAO,CAAC,CAAC;EAClC,CAAC;EAED,oBACEvB,OAAA,CAACT,aAAa;IAAAmD,QAAA,eACZ1C,OAAA,CAACR,QAAQ;MAAAkD,QAAA,gBACP1C,OAAA,CAACP,SAAS;QAACkD,OAAO,EAAC,IAAI;QAAAD,QAAA,EAAC;MAAqB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAW,CAAC,eACzD/C,OAAA;QAAMgD,QAAQ,EAAEpB,YAAa;QAAAc,QAAA,gBAC3B1C,OAAA,CAACN,SAAS;UAACuD,KAAK,EAAC,kDAAU;UAAC1C,IAAI,EAAC,MAAM;UAAC2C,QAAQ,EAAE1B,YAAa;UAAC2B,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAC3E/C,OAAA,CAACN,SAAS;UAACuD,KAAK,EAAC,kDAAU;UAAC1C,IAAI,EAAC,aAAa;UAAC2C,QAAQ,EAAE1B,YAAa;UAAC2B,QAAQ;UAACC,SAAS;UAACC,IAAI,EAAE;QAAE;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrG/C,OAAA,CAACN,SAAS;UAACuD,KAAK,EAAC,4CAAS;UAAC1C,IAAI,EAAC,UAAU;UAAC2C,QAAQ,EAAE1B,YAAa;UAAC2B,QAAQ;QAAA;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAG9E/C,OAAA,CAACH,MAAM;UAACyD,SAAS;UAAC/C,IAAI,EAAC,MAAM;UAACoB,KAAK,EAAEtB,QAAQ,CAACK,IAAK;UAACwC,QAAQ,EAAE1B,YAAa;UAAC2B,QAAQ;UAAAT,QAAA,gBAClF1C,OAAA,CAACJ,QAAQ;YAAC+B,KAAK,EAAC,EAAE;YAAAe,QAAA,EAAC;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eAChD/C,OAAA,CAACJ,QAAQ;YAAC+B,KAAK,EAAC,0EAAc;YAAAe,QAAA,EAAC;UAAY;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACtD/C,OAAA,CAACJ,QAAQ;YAAC+B,KAAK,EAAC,0BAAM;YAAAe,QAAA,EAAC;UAAI;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC,eACtC/C,OAAA,CAACJ,QAAQ;YAAC+B,KAAK,EAAC,sCAAQ;YAAAe,QAAA,EAAC;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAU,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACpC,CAAC,EAGR1C,QAAQ,CAACK,IAAI,KAAK,cAAc,iBAC/BV,OAAA,CAAAE,SAAA;UAAAwC,QAAA,gBACE1C,OAAA,CAACN,SAAS;YAACuD,KAAK,EAAC,6FAAkB;YAAC1C,IAAI,EAAC,cAAc;YAAC2C,QAAQ,EAAE1B,YAAa;YAAC2B,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC3F/C,OAAA,CAACN,SAAS;YAACuD,KAAK,EAAC,yDAAc;YAAC1C,IAAI,EAAC,MAAM;YAACG,IAAI,EAAC,QAAQ;YAACwC,QAAQ,EAAE1B,YAAa;YAAC2B,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC7F/C,OAAA,CAACN,SAAS;YAACuD,KAAK,EAAC,mGAAmB;YAAC1C,IAAI,EAAC,OAAO;YAACG,IAAI,EAAC,QAAQ;YAACwC,QAAQ,EAAE1B,YAAa;YAAC2B,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACnG/C,OAAA,CAACN,SAAS;YAACuD,KAAK,EAAC,mCAAU;YAAC1C,IAAI,EAAC,OAAO;YAACG,IAAI,EAAC,QAAQ;YAACwC,QAAQ,EAAE1B,YAAa;YAAC2B,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eAC1F,CACH,EAGA1C,QAAQ,CAACK,IAAI,KAAK,MAAM,iBACvBV,OAAA,CAAAE,SAAA;UAAAwC,QAAA,gBACE1C,OAAA,CAACN,SAAS;YAACuD,KAAK,EAAC,gCAAO;YAAC1C,IAAI,EAAC,OAAO;YAAC2C,QAAQ,EAAE1B,YAAa;YAAC2B,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACzE/C,OAAA,CAACN,SAAS;YAACuD,KAAK,EAAC,sCAAQ;YAAC1C,IAAI,EAAC,OAAO;YAAC2C,QAAQ,EAAE1B,YAAa;YAAC2B,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC1E/C,OAAA,CAACN,SAAS;YAACuD,KAAK,EAAC,+DAAa;YAAC1C,IAAI,EAAC,MAAM;YAACG,IAAI,EAAC,QAAQ;YAACwC,QAAQ,EAAE1B,YAAa;YAAC2B,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC5F/C,OAAA,CAACN,SAAS;YAACuD,KAAK,EAAC,qDAAa;YAAC1C,IAAI,EAAC,SAAS;YAACG,IAAI,EAAC,QAAQ;YAACwC,QAAQ,EAAE1B;UAAa;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eACtF,CACH,EAGA1C,QAAQ,CAACK,IAAI,KAAK,QAAQ,iBACzBV,OAAA,CAAAE,SAAA;UAAAwC,QAAA,gBACE1C,OAAA,CAACN,SAAS;YAACuD,KAAK,EAAC,yDAAY;YAAC1C,IAAI,EAAC,aAAa;YAAC2C,QAAQ,EAAE1B,YAAa;YAAC2B,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACpF/C,OAAA,CAACN,SAAS;YAACuD,KAAK,EAAC,+CAAY;YAAC1C,IAAI,EAAC,YAAY;YAACG,IAAI,EAAC,QAAQ;YAACwC,QAAQ,EAAE1B,YAAa;YAAC2B,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eACjG/C,OAAA,CAACN,SAAS;YAACuD,KAAK,EAAC,iEAAe;YAAC1C,IAAI,EAAC,MAAM;YAACG,IAAI,EAAC,QAAQ;YAACwC,QAAQ,EAAE1B,YAAa;YAAC2B,QAAQ;UAAA;YAAAP,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC,eAC9F/C,OAAA,CAACN,SAAS;YAACuD,KAAK,EAAC,2EAAe;YAAC1C,IAAI,EAAC,cAAc;YAAC2C,QAAQ,EAAE1B;UAAa;YAAAoB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE,CAAC;QAAA,eAC/E,CACH,eAED/C,OAAA,CAACL,UAAU;UAACe,IAAI,EAAC,QAAQ;UAACiC,OAAO,EAAC,WAAW;UAAAD,QAAA,EAAC;QAE9C;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAY,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEpB;AAAC3C,EAAA,CAnGQD,QAAQ;EAAA,QAoBEb,WAAW;AAAA;AAAAiE,EAAA,GApBrBpD,QAAQ;AAqGjB,eAAeA,QAAQ;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}